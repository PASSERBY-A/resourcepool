/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyViewport', {
    extend: 'Ext.container.Viewport',

    layout: {
        type: 'fit'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    layout: {
                        type: 'fit'
                    },
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    icon: 'config.gif',
                                    text: avmon.ireport.conditionSet,
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick1,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    items: [
                        {
                            xtype: 'panel',
                            id: 'contentPanel',
                            itemId: 'contentPanel',
                            autoScroll: true,
                            layout: {
                                type: 'fit'
                            },
                            dockedItems: [
                                {
                                    xtype: 'toolbar',
                                    dock: 'top',
                                    hidden: true,
                                    items: [
                                        {
                                            xtype: 'button',
                                            icon: '../source/image/exportPdf.png',
                                            text: avmon.ireport.exportPDF,
                                            listeners: {
                                                click: {
                                                    fn: me.onButtonClick2,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'tbseparator'
                                        },
                                        {
                                            xtype: 'button',
                                            icon: '../source/image/word.gif',
                                            text: avmon.ireport.exportWord,
                                            listeners: {
                                                click: {
                                                    fn: me.onButtonClick3,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'tbseparator'
                                        },
                                        {
                                            xtype: 'button',
                                            icon: '../source/image/excel.gif',
                                            text: avmon.ireport.exportExcel,
                                            listeners: {
                                                click: {
                                                    fn: me.onButtonClick4,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    listeners: {
                        afterrender: {
                            fn: me.onPanelAfterRender,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onButtonClick1: function(button, e, options) {
        Ext.create('MyApp.view.MyWindow').show();
    },

    onButtonClick2: function(button, e, options) {
        var url  = "../source/config/report-html.jsp?reportId="+Ext.devicelist.reportId+
        "&type=pdf&params="+encodeURI(Ext.devicelist.parmstr);
        window.location=url;
    },

    onButtonClick3: function(button, e, options) {
        var url  = "../source/config/report-html.jsp?reportId="+Ext.devicelist.reportId+
        "&type=word&params="+encodeURI(Ext.devicelist.parmstr);
        window.location=url;
    },

    onButtonClick4: function(button, e, options) {
        var url  = "../source/config/report-html.jsp?reportId="+Ext.devicelist.reportId+
        "&type=excel&params="+encodeURI(Ext.devicelist.parmstr);
        window.location=url;
    },

    onPanelAfterRender: function(abstractcomponent, options) {
        Ext.create('MyApp.view.MyWindow').show();
    }

});