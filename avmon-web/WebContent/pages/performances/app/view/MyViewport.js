/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('performance.view.MyViewport', {
    extend: 'Ext.container.Viewport',

    layout: {
        type: 'border'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'treepanel',
                    region: 'west',
                    split: true,
                    autoRender: true,
                    autoShow: true,
                    id: 'performance-menuTree',
                    itemId: 'performance-menuTree',
                    width: 190,
                    collapsible: true,
                    title: 'Menu',
                    store: 'TreeNodes',
                    animate: false,
                    viewConfig: {

                    }
                },
                {
                    xtype: 'panel',
                    region: 'center',
                    frame: true,
                    id: 'performance-tabPanel',
                    layout: {
                        type: 'card'
                    },
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'tbspacer',
                                    width: 10
                                },
                                {
                                    xtype: 'label',
                                    itemId: 'labelTitle',
                                    style: 'font-weight:bold;',
                                    text: '   '
                                },
                                {
                                    xtype: 'tbspacer',
                                    width: 30
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});