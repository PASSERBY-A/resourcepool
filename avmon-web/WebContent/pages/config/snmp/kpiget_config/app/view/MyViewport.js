/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyViewport', {
    extend: 'Ext.container.Viewport',

    layout: {
        type: 'border'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'treepanel',
                    region: 'west',
                    id: 'configMenuTree',
                    itemId: 'configMenuTree',
                    width: 250,
                    collapsible: true,
                    title: 'Menu',
                    store: 'ConfigMenus',
                    rootVisible: false,
                    viewConfig: {

                    },
                    listeners: {
                        select: {
                            fn: me.onConfigMenuTreeSelect,
                            scope: me
                        },
                        afterlayout: {
                            fn: me.onConfigMenuTreeAfterLayout,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'panel',
                    region: 'center',
                    id: 'configContent',
                    itemId: 'configContent',
                    layout: {
                        type: 'border'
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onConfigMenuTreeSelect: function(rowmodel, record, index, eOpts) {
        Ext.getCmp('configContent').body.update('<iframe scrolling="auto" frameborder="0" width="100%" height="100%" src="'+record.get("url")+'"></iframe>');
    },

    onConfigMenuTreeAfterLayout: function(container, layout, eOpts) {
        var tree=Ext.getCmp("configMenuTree");
        var path="/root/310/303";
        tree.getSelectionModel().select(tree.getStore().getNodeById(303),true);
    }

});