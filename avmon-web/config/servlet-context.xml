<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd	
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="true">
	
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/modules/**" location="/modules/" />
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/pages/**" location="/pages/" />
	<mvc:resources mapping="/extjs/**" location="/extjs/" />
	<mvc:resources mapping="/reportMgt/**" location="/reportMgt/" />
	<mvc:resources mapping="/main/**" location="/pages/main/" />
	<mvc:resources mapping="/alarm/**" location="/pages/alarm/" />
	<mvc:resources mapping="/performance/**" location="/pages/performance/" />
	<mvc:resources mapping="/performancetree/**" location="/pages/performancetree/" />
	<mvc:resources mapping="/config/**" location="/pages/config/" />
	<mvc:resources mapping="/deploy/**" location="/pages/deploy/" />
	<mvc:resources mapping="/batchdeploy/**" location="/pages/batchdeploy/" />
	<mvc:resources mapping="/system/**" location="/pages/system/" />
	<mvc:resources mapping="/ireport/**" location="/ireport/" />
	<mvc:resources mapping="/dashboard/**" location="/pages/dashboard/" />
	<mvc:resources mapping="/kpiCompare/**" location="/pages/kpiCompare/" />
	<!-- add by mark start -->
	<mvc:resources mapping="/equipmentCenter/**" location="/pages/equipmentCenter/" />
	<mvc:resources mapping="/performances/**" location="/pages/performances/" />
	<mvc:resources mapping="/kpiAnalysis/**" location="/pages/kpiAnalysis/" />
	<mvc:resources mapping="/report/**" location="/pages/report/" />
	<mvc:resources mapping="/discovery/**" location="/pages/discovery/" />

	<!-- add by mark end -->
	
	
	<mvc:resources mapping="/kpigetconfig/**" location="/pages/config/snmp/kpiget_config/" />
	<mvc:resources mapping="/oidconfig/**" location="/pages/config/snmp/oidconfig/" />
	<mvc:resources mapping="/oidmanage/**" location="/pages/config/snmp/oidmanage/" />


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- ①：对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
<!-- 	<context:component-scan base-package="com.hp.avmon" /> -->
	<context:component-scan base-package="com.hp.avmon.*.web">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
	
	<!-- ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	</bean>
	
		<!-- 应用属性文件读入 -->
	<bean id="applicationProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 标准配置 -->
				<value>classpath:/config.properties</value>
			</list>
		</property>
	</bean>
	

	
	<!-- PropertyPlaceholderConfigurer,用于spring ${placeholder}的解析 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="properties" ref="applicationProperties" />
	</bean>
	
	
	<!-- 文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 解析request的编码 ，Default is ISO-8859-1 -->
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 设置最大允许的大小(字节)。-1表示没有限制(默认) 1024*1024*10=10MB -->
		<property name="maxUploadSize" value="1048576000" />
		<!--被允许的最大的内存的大小，Default is 10240 bytes -->
		<property name="maxInMemorySize" value="20480" />
		<!-- 一个类似懒加载的属性.可以定义该属性.让解析文件的时候再抛异常,然后Controller中定义异常处理的方法 -->
		<property name="resolveLazily" value="true" />
	</bean>
	
</beans>
